"use strict";(self.webpackChunk_semaphore_protocol_website=self.webpackChunk_semaphore_protocol_website||[]).push([[6003],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(r),m=i,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1690:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return a},metadata:function(){return o},toc:function(){return c}});var n=r(3117),i=(r(7294),r(3905));const a={sidebar_position:2},l="Circuitos",o={unversionedId:"technical-reference/circuits",id:"version-V3/technical-reference/circuits",title:"Circuitos",description:"El circuito Semaphore es el coraz\xf3n del protocolo y est\xe1 compuesto por tres partes:",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-V3/technical-reference/circuits.md",sourceDirName:"technical-reference",slug:"/technical-reference/circuits",permalink:"/es/docs/technical-reference/circuits",draft:!1,editUrl:"https://github.com/semaphore-protocol/website/edit/main/versioned_docs/version-V3/technical-reference/circuits.md",tags:[],version:"V3",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"version-V3/mySidebar",previous:{title:"Obteniendo datos",permalink:"/es/docs/guides/fetching-data"},next:{title:"Contratos",permalink:"/es/docs/technical-reference/contracts"}},s={},c=[{value:"Prueba de membres\xeda",id:"prueba-de-membres\xeda",level:2},{value:"Hash anulador (Nullifier hash)",id:"hash-anulador-nullifier-hash",level:2},{value:"Se\xf1al",id:"se\xf1al",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"circuitos"},"Circuitos"),(0,i.kt)("p",null,"El ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/main/packages/circuits"},"circuito Semaphore")," es el coraz\xf3n del protocolo y est\xe1 compuesto por tres partes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/technical-reference/circuits#proof-of-membership"},(0,i.kt)("strong",{parentName:"a"},"Prueba de membres\xeda"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/technical-reference/circuits#nullifier-hash"},(0,i.kt)("strong",{parentName:"a"},"Nullifier hash"))," (hash anulador)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/technical-reference/circuits#signal"},(0,i.kt)("strong",{parentName:"a"},"Se\xf1al")))),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/semaphore-protocol/semaphore/raw/main/packages/circuits/scheme.png",alt:"Semaphore circuit"})),(0,i.kt)("p",null,"El diagrama anterior muestra c\xf3mo se utilizan las se\xf1ales de entrada en el circuito Semaphore y c\xf3mo se calculan los resultados."),(0,i.kt)("h2",{id:"prueba-de-membres\xeda"},"Prueba de membres\xeda"),(0,i.kt)("p",null,"El circuito resume criptogr\xe1ficamente (hashes) el nullifier hash de la identidad utilizando la identity trapdoor (identidad trampilla) para generar el compromiso de identidad. Despu\xe9s de esto, el circuito verifica la prueba de membres\xeda contra la ra\xedz de Merkle y el compromiso de identidad."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Insumos (inputs) privados:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"treeSiblings[nLevels]"),": los valores a lo largo del camino de Merkle rumbo al compromiso de identidad del usuario,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"treePathIndices[nLevels]"),": la direcci\xf3n (0/1) por nivel del \xe1rbol correspondiente al camino de Merkle rumbo al compromiso de identidad del usuario,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identityNullifier"),": la identidad secreta de 32-bits utilizada como anulador,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identityTrapdoor"),": la identidad secreta de 32-bits utilizada como trampilla.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Resultados (outputs) p\xfablicos:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"root"),": La ra\xedz de Merkle del \xe1rbol.")),(0,i.kt)("h2",{id:"hash-anulador-nullifier-hash"},"Hash anulador (Nullifier hash)"),(0,i.kt)("p",null,"El circuito resume criptogr\xe1ficamente (hashes) el identity nullifier con el nullifier externo y despu\xe9s revisa que el resultado coincida con el nullifier hash provisto.\nLos nullifier hashes guardados en un contrato inteligente Semaphore permiten que el contrato rechace las pruebas que contengan un nullifier hash ya utilizado."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Insumos (inputs) privados:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identityNullifier"),": el identity secret (secreto de identidad) de 32 bits que se utiliza como nullifier.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Insumos (inputs) p\xfablicos:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"externalNullifier"),": el nullifier externo de 32 bits.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Resultados (outputs) p\xfablicos:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nullifierHash"),": el hash del identity nullifier y del nullifier externo; se utiliza para prevenir que el mismo usuario emita dos se\xf1ales.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Procedimiento:")),(0,i.kt)("h2",{id:"se\xf1al"},"Se\xf1al"),(0,i.kt)("p",null,"El circuito calcula un cuadrado ficticio del hash de la se\xf1al para prevenir que se altere la prueba."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Insumos (inputs) p\xfablicos:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"signalHash"),": El hash de la se\xf1al del usuario.")))}p.isMDXComponent=!0}}]);