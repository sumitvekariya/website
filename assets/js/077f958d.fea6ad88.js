"use strict";(self.webpackChunk_semaphore_protocol_website=self.webpackChunk_semaphore_protocol_website||[]).push([[2852],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,d=c["".concat(l,".").concat(m)]||c[m]||h[m]||i;return r?n.createElement(d,o(o({ref:t},u),{},{components:r})):n.createElement(d,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7796:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var n=r(3117),a=(r(7294),r(3905));const i={sidebar_position:7},o="Glossary",s={unversionedId:"glossary",id:"version-V3/glossary",title:"Glossary",description:"Semaphore identity",source:"@site/versioned_docs/version-V3/glossary.md",sourceDirName:".",slug:"/glossary",permalink:"/docs/glossary",draft:!1,editUrl:"https://github.com/semaphore-protocol/website/edit/main/versioned_docs/version-V3/glossary.md",tags:[],version:"V3",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"version-V3/mySidebar",previous:{title:"Subgraph",permalink:"/docs/subgraph"},next:{title:"FAQ",permalink:"/docs/faq"}},l={},p=[{value:"Semaphore identity",id:"semaphore-identity",level:2},{value:"Identity commitment",id:"identity-commitment",level:2},{value:"Semaphore group",id:"semaphore-group",level:2},{value:"Merkle tree",id:"merkle-tree",level:2},{value:"Nullifier",id:"nullifier",level:2},{value:"Relay",id:"relay",level:2},{value:"Trusted setup files",id:"trusted-setup-files",level:2}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"glossary"},"Glossary"),(0,a.kt)("h2",{id:"semaphore-identity"},"Semaphore identity"),(0,a.kt)("p",null,"The identity of a user in the Semaphore protocol.\nAn identity contains the following three values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#identity-commitment"},"Identity commitment"),": the public value."),(0,a.kt)("li",{parentName:"ul"},"Identity trapdoor and identity nullifier: secret values known only by the user.")),(0,a.kt)("h2",{id:"identity-commitment"},"Identity commitment"),(0,a.kt)("p",null,"The public ",(0,a.kt)("a",{parentName:"p",href:"#semaphore-identity"},"Semaphore identity")," value used in ",(0,a.kt)("a",{parentName:"p",href:"#semaphore-group"},"Semaphore groups"),"."),(0,a.kt)("p",null,"Semaphore uses the ",(0,a.kt)("a",{parentName:"p",href:"https://www.poseidon-hash.info/"},"Poseidon")," hash function to create the identity commitment from the Semaphore identity secret values."),(0,a.kt)("h2",{id:"semaphore-group"},"Semaphore group"),(0,a.kt)("p",null,"A group is a binary incremental ",(0,a.kt)("a",{parentName:"p",href:"#merkle-tree"},"Merkle tree")," in which each leaf contains an ",(0,a.kt)("a",{parentName:"p",href:"#identity-commitment"},"identity commitment")," for a user.\nThe identity commitment proves that the user is a group member without revealing the Semaphore identity of the user."),(0,a.kt)("p",null,"Semaphore uses the ",(0,a.kt)("strong",{parentName:"p"},"Poseidon")," hash function to create Merkle trees.\nFor more information, see the ",(0,a.kt)("a",{parentName:"p",href:"https://www.poseidon-hash.info/"},"Poseidon website"),"."),(0,a.kt)("h2",{id:"merkle-tree"},"Merkle tree"),(0,a.kt)("p",null,"A tree in which every leaf (i.e., a node that doesn't have children) is labelled with the cryptographic hash of a data block,\nand every node that isn't a leaf is labelled with the cryptographic hash of its child node labels.\nIn zero-knowledge protocols, Merkle trees can be used to efficiently summarize and validate large data sets.\nTo validate that a tree contains a specific leaf, a verifier only needs a portion of the complete data structure."),(0,a.kt)("p",null,"For more information, see ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Merkle_tree"},"Merkle tree in Wikipedia"),"."),(0,a.kt)("h2",{id:"nullifier"},"Nullifier"),(0,a.kt)("p",null,"A value used to prevent double entry or double signalling."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/technical-reference/circuits/#nullifier-hash"},"Circuit nullifier hash"),"."),(0,a.kt)("h2",{id:"relay"},"Relay"),(0,a.kt)("p",null,"A third-party who receives a fee for including relayed transactions in the blockchain (McMenamin, Daza, and Fitz. ",(0,a.kt)("a",{parentName:"p",href:"https://eprint.iacr.org/2022/155.pdf"},"https://eprint.iacr.org/2022/155.pdf"),", p.3).\nTo preserve the anonymity of the user broadcasting a signal with Semaphore, an application may use a relayer to post the signal transaction to Ethereum on behalf of the user."),(0,a.kt)("p",null,"Applications may provide rewards for relayers and implement front-running prevention mechanisms, such as requiring the signals to include the relayer\u2019s address, binding the\nsignal to that specific address (",(0,a.kt)("a",{parentName:"p",href:"https://semaphore.pse.dev/whitepaper-v1.pdf"},"https://semaphore.pse.dev/whitepaper-v1.pdf"),", p.6)."),(0,a.kt)("h2",{id:"trusted-setup-files"},"Trusted setup files"),(0,a.kt)("p",null,"The secure, verifiable parameters generated by Semaphore's trusted setup ceremony.\nSemaphore uses the trusted setup files to generate and verify valid zero-knowledge proofs.\nTo generate or verify valid zero-knowledge proofs with Semaphore, applications must include the following Semaphore ",(0,a.kt)("em",{parentName:"p"},"trusted setup")," files:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"semaphore.zkey"),(0,a.kt)("li",{parentName:"ul"},"semaphore.wasm"),(0,a.kt)("li",{parentName:"ul"},"semaphore.json")),(0,a.kt)("p",null,"For a complete list of ready-to-use files, see ",(0,a.kt)("a",{parentName:"p",href:"http://www.trusted-setup-pse.org"},"http://www.trusted-setup-pse.org"),".\nTo learn more, see the ",(0,a.kt)("a",{parentName:"p",href:"https://storage.googleapis.com/trustedsetup-a86f4.appspot.com/semaphore/semaphore_top_index.html"},"trusted setup ceremony"),"."))}c.isMDXComponent=!0}}]);